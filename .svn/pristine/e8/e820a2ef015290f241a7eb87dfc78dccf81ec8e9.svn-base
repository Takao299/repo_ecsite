package com.bh.ecsite.servlet;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.bh.ecsite.common.AmazonException;
import com.bh.ecsite.common.PathConstant;
import com.bh.ecsite.service.CartService;
import com.bh.ecsite.value.ItemInCartDTO;
import com.bh.ecsite.value.UserDTO;

/**
 * Servlet implementation class PurchaseConfirmServlet
 */
@WebServlet("/PurchaseConfirm")
public class PurchaseConfirmServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

    /**
     * @see HttpServlet#HttpServlet()
     */
    public PurchaseConfirmServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		//response.getWriter().append("Served at: ").append(request.getContextPath());
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		//doGet(request, response);

		try {
			HttpSession session = request.getSession();
			//このセッションIDの中には遷移元のデータが入っていたりログイン情報以外のデータも入っている可能性があるのでif文でgetSession(false)は使えない

			if(session.getAttribute("loginUserInfo") == null) {
			//空ならログインしてない
				request.getRequestDispatcher(PathConstant.LOGIN).forward(request, response);
			}else {
			//ログインしてる

				//ログインユーザーの情報を元にitems_in_cartテーブルから再びDTOを取ってくる
				//その際、CartServiceとCartDAOを使いまわす
				UserDTO userDTO = (UserDTO) session.getAttribute("loginUserInfo");

				ItemInCartDTO cartDomain = new ItemInCartDTO();
				cartDomain.setUserId(userDTO.getUserId());	//渡すDTOにはuserIdのみ入れる

				CartService cartService = new CartService();

				ArrayList<ItemInCartDTO> returnDTO = cartService.executeCart(cartDomain);

				request.setAttribute("itemInCartDTO", returnDTO);


				//カート内のすべての商品の合計金額
				int sum = 0;
				for(ItemInCartDTO val:returnDTO) {
					int itemPrice = val.getItem().getPrice() * val.getAmount();
					sum += itemPrice;
				}
				request.setAttribute("sum", sum);


				request.getRequestDispatcher(PathConstant.PURCHASECONFIRM).forward(request, response);

			}

		} catch (AmazonException e) {
			// TODO 自動生成された catch ブロック
			e.printStackTrace();

			//致命的エラーが発生した場合、ユーザには『システム管理者に連絡してください』
			//画面を表示する事、それ以外できることはない！
			request.getRequestDispatcher(PathConstant.ERROR_PAGE).forward(request, response);
		}
	}

}
